# This file was generated based on ".graphqlconfig" at Sat Jul 28 18:43:42 CEST 2018. Do not edit manually.

scalar UUID
scalar Upload

"An object with an ID"
interface Node {
  "The id of the object."
  id: ID!
}

type AuthPayload {
  token: String!
  user: User!
}

type Creation implements Node {
  creator(where: UserWhereInput): User!
  description: String!
  file(where: FileWhereInput): File
  id: ID!
  likes: Int!
  name: String!
  pictures(after: String, before: String, first: Int, last: Int, orderBy: FileOrderByInput, skip: Int, where: FileWhereInput): [File!]
  status: Status!
  tags: [String!]!
}

type File {
  id: UUID!
  name: String!
  url: String!
}

type Mutation {
  createCreation(creation: CreationInput!): Creation!
  login(token: String!): AuthPayload!
}

type Query {
  creations: [Creation!]!
  me: User!
}

type User {
  avatar: String!
  creations(after: String, before: String, first: Int, last: Int, orderBy: CreationOrderByInput, skip: Int, where: CreationWhereInput): [Creation!]
  discord_id: String!
  email: String!
  id: UUID!
  role: Role!
  username: String!
}

enum CreationOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  likes_ASC
  likes_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum FileOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

enum Role {
  ADMIN
  USER
}

enum Status {
  COMPLETED
  WIP
}

input CreationInput {
  description: String!
  file: Upload
  name: String!
  pictures: [Upload!]!
  status: Status!
  tags: [String!]!
}

input CreationWhereInput {
  "Logical AND on all given filters."
  AND: [CreationWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [CreationWhereInput!]
  "Logical OR on all given filters."
  OR: [CreationWhereInput!]
  creator: UserWhereInput
  description: String
  "All values containing the given string."
  description_contains: String
  "All values ending with the given string."
  description_ends_with: String
  "All values greater than the given value."
  description_gt: String
  "All values greater than or equal the given value."
  description_gte: String
  "All values that are contained in given list."
  description_in: [String!]
  "All values less than the given value."
  description_lt: String
  "All values less than or equal the given value."
  description_lte: String
  "All values that are not equal to given value."
  description_not: String
  "All values not containing the given string."
  description_not_contains: String
  "All values not ending with the given string."
  description_not_ends_with: String
  "All values that are not contained in given list."
  description_not_in: [String!]
  "All values not starting with the given string."
  description_not_starts_with: String
  "All values starting with the given string."
  description_starts_with: String
  file: FileWhereInput
  id: ID
  "All values containing the given string."
  id_contains: ID
  "All values ending with the given string."
  id_ends_with: ID
  "All values greater than the given value."
  id_gt: ID
  "All values greater than or equal the given value."
  id_gte: ID
  "All values that are contained in given list."
  id_in: [ID!]
  "All values less than the given value."
  id_lt: ID
  "All values less than or equal the given value."
  id_lte: ID
  "All values that are not equal to given value."
  id_not: ID
  "All values not containing the given string."
  id_not_contains: ID
  "All values not ending with the given string."
  id_not_ends_with: ID
  "All values that are not contained in given list."
  id_not_in: [ID!]
  "All values not starting with the given string."
  id_not_starts_with: ID
  "All values starting with the given string."
  id_starts_with: ID
  likes: Int
  "All values greater than the given value."
  likes_gt: Int
  "All values greater than or equal the given value."
  likes_gte: Int
  "All values that are contained in given list."
  likes_in: [Int!]
  "All values less than the given value."
  likes_lt: Int
  "All values less than or equal the given value."
  likes_lte: Int
  "All values that are not equal to given value."
  likes_not: Int
  "All values that are not contained in given list."
  likes_not_in: [Int!]
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  pictures_every: FileWhereInput
  pictures_none: FileWhereInput
  pictures_some: FileWhereInput
  status: Status
  "All values that are contained in given list."
  status_in: [Status!]
  "All values that are not equal to given value."
  status_not: Status
  "All values that are not contained in given list."
  status_not_in: [Status!]
}

input FileWhereInput {
  "Logical AND on all given filters."
  AND: [FileWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [FileWhereInput!]
  "Logical OR on all given filters."
  OR: [FileWhereInput!]
  name: String
  "All values containing the given string."
  name_contains: String
  "All values ending with the given string."
  name_ends_with: String
  "All values greater than the given value."
  name_gt: String
  "All values greater than or equal the given value."
  name_gte: String
  "All values that are contained in given list."
  name_in: [String!]
  "All values less than the given value."
  name_lt: String
  "All values less than or equal the given value."
  name_lte: String
  "All values that are not equal to given value."
  name_not: String
  "All values not containing the given string."
  name_not_contains: String
  "All values not ending with the given string."
  name_not_ends_with: String
  "All values that are not contained in given list."
  name_not_in: [String!]
  "All values not starting with the given string."
  name_not_starts_with: String
  "All values starting with the given string."
  name_starts_with: String
  url: String
  "All values containing the given string."
  url_contains: String
  "All values ending with the given string."
  url_ends_with: String
  "All values greater than the given value."
  url_gt: String
  "All values greater than or equal the given value."
  url_gte: String
  "All values that are contained in given list."
  url_in: [String!]
  "All values less than the given value."
  url_lt: String
  "All values less than or equal the given value."
  url_lte: String
  "All values that are not equal to given value."
  url_not: String
  "All values not containing the given string."
  url_not_contains: String
  "All values not ending with the given string."
  url_not_ends_with: String
  "All values that are not contained in given list."
  url_not_in: [String!]
  "All values not starting with the given string."
  url_not_starts_with: String
  "All values starting with the given string."
  url_starts_with: String
}

input UserWhereInput {
  "Logical AND on all given filters."
  AND: [UserWhereInput!]
  "Logical NOT on all given filters combined by AND."
  NOT: [UserWhereInput!]
  "Logical OR on all given filters."
  OR: [UserWhereInput!]
  avatar: String
  "All values containing the given string."
  avatar_contains: String
  "All values ending with the given string."
  avatar_ends_with: String
  "All values greater than the given value."
  avatar_gt: String
  "All values greater than or equal the given value."
  avatar_gte: String
  "All values that are contained in given list."
  avatar_in: [String!]
  "All values less than the given value."
  avatar_lt: String
  "All values less than or equal the given value."
  avatar_lte: String
  "All values that are not equal to given value."
  avatar_not: String
  "All values not containing the given string."
  avatar_not_contains: String
  "All values not ending with the given string."
  avatar_not_ends_with: String
  "All values that are not contained in given list."
  avatar_not_in: [String!]
  "All values not starting with the given string."
  avatar_not_starts_with: String
  "All values starting with the given string."
  avatar_starts_with: String
  creations_every: CreationWhereInput
  creations_none: CreationWhereInput
  creations_some: CreationWhereInput
  discord_id: String
  "All values containing the given string."
  discord_id_contains: String
  "All values ending with the given string."
  discord_id_ends_with: String
  "All values greater than the given value."
  discord_id_gt: String
  "All values greater than or equal the given value."
  discord_id_gte: String
  "All values that are contained in given list."
  discord_id_in: [String!]
  "All values less than the given value."
  discord_id_lt: String
  "All values less than or equal the given value."
  discord_id_lte: String
  "All values that are not equal to given value."
  discord_id_not: String
  "All values not containing the given string."
  discord_id_not_contains: String
  "All values not ending with the given string."
  discord_id_not_ends_with: String
  "All values that are not contained in given list."
  discord_id_not_in: [String!]
  "All values not starting with the given string."
  discord_id_not_starts_with: String
  "All values starting with the given string."
  discord_id_starts_with: String
  email: String
  "All values containing the given string."
  email_contains: String
  "All values ending with the given string."
  email_ends_with: String
  "All values greater than the given value."
  email_gt: String
  "All values greater than or equal the given value."
  email_gte: String
  "All values that are contained in given list."
  email_in: [String!]
  "All values less than the given value."
  email_lt: String
  "All values less than or equal the given value."
  email_lte: String
  "All values that are not equal to given value."
  email_not: String
  "All values not containing the given string."
  email_not_contains: String
  "All values not ending with the given string."
  email_not_ends_with: String
  "All values that are not contained in given list."
  email_not_in: [String!]
  "All values not starting with the given string."
  email_not_starts_with: String
  "All values starting with the given string."
  email_starts_with: String
  role: Role
  "All values that are contained in given list."
  role_in: [Role!]
  "All values that are not equal to given value."
  role_not: Role
  "All values that are not contained in given list."
  role_not_in: [Role!]
  username: String
  "All values containing the given string."
  username_contains: String
  "All values ending with the given string."
  username_ends_with: String
  "All values greater than the given value."
  username_gt: String
  "All values greater than or equal the given value."
  username_gte: String
  "All values that are contained in given list."
  username_in: [String!]
  "All values less than the given value."
  username_lt: String
  "All values less than or equal the given value."
  username_lte: String
  "All values that are not equal to given value."
  username_not: String
  "All values not containing the given string."
  username_not_contains: String
  "All values not ending with the given string."
  username_not_ends_with: String
  "All values that are not contained in given list."
  username_not_in: [String!]
  "All values not starting with the given string."
  username_not_starts_with: String
  "All values starting with the given string."
  username_starts_with: String
}
